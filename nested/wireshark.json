{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create an EC2 instance running the WireShark AMI",
    "Parameters": {
        "KeyPair": {
            "Description": "Name of an existing EC2 Key Pair to enable SSH access to the Wireshark instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InstanceType": {
            "Description": "Wireshark EC2 instance type",
            "Type": "String"
        },
        "VPC": {
            "Description": "VPC to launch virtual server in",
            "Type": "AWS::EC2::VPC::Id"
        },
        "Subnet1": {
            "Description": "subnet to launch virtual server in",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "WiresharkRDPPassword": {
            "Description": "Wireshark EC2 instance type",
            "Type": "String"
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "ImageID": "ami-43a15f3e"
            },
            "us-west-1": {
                "ImageID": "ami-925144f2"
            },
            "us-east-2": {
                "ImageID": "ami-916f59f4"
            },
            "us-west-2": {
                "ImageID": "ami-4e79ed36"
            },
            "sa-east-1": {
                "ImageID": "ami-423d772e"
            },
            "eu-central-1": {
                "ImageID": "ami-7c412f13"
            },
            "ca-central-1": {
                "ImageID": "ami-ae55d2ca"
            },
            "eu-west-1": {
                "ImageID": "ami-f90a4880"
            },
            "eu-west-2": {
                "ImageID": "ami-f4f21593"
            },
            "eu-west-3": {
                "ImageID": "ami-0e55e373"
            },
            "ap-southeast-1": {
                "ImageID": "ami-52d4802e"
            },
            "ap-southeast-2": {
                "ImageID": "ami-d38a4ab1"
            },
            "ap-northeast-1": {
                "ImageID": "ami-0d74386b"
            },
            "ap-northeast-2": {
                "ImageID": "ami-a414b9ca"
            },
            "ap-south-1": {
                "ImageID": "ami-0189d76e"
            }
        }
    },
    "Resources": {
        "WireSharkSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for WireShark EC2 Instance",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3389",
                        "ToPort": "3389",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "4789",
                        "ToPort": "4789",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WireShark_SG"
                    }
                ]
            }
        },
        "WireSharkInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "ImageID"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "True",
                        "DeleteOnTermination": "True",
                        "SubnetId": {
                            "Ref": "Subnet1"
                        },
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "WireSharkSG"
                            }
                        ]
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex\n",
                                "PASSWD=",
                                {
                                    "Ref":"WiresharkRDPPassword"
                                },
                                "\n",
                                "cd /home/ubuntu/\n",
                                "wget https://s3.amazonaws.com/gigamonartifacts/wireshark_ntopng/scripts/wireshark.sh\n",
                                "chmod 777 /home/ubuntu/wireshark.sh\n",
                                "bash wireshark.sh $PASSWD"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "WireShark"
                    }
                ]
            }
        }
    },
    "Outputs": {
        "PublicIp": {
            "Description": "Server's PublicIp Address",
            "Value": {
                "Fn::GetAtt": [
                    "WireSharkInstance",
                    "PublicIp"
                ]
            }
        },
        "PrivateIp": {
            "Description": "The Private IP",
            "Value": {
                "Fn::GetAtt": [
                    "WireSharkInstance",
                    "PrivateIp"
                ]
            }
        }
    }
}