{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create a single node Splunk installation.",
    "Parameters": {
        "InstanceType": {
            "Description": "Splunk EC2 instance type",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.medium",
                "c4.2xlarge",
                "c4.4xlarge",
                "c4.8xlarge"
            ],
            "ConstraintDescription": "must be a valid EC2 instance type."
        },
        "SplunkAdminPassword": {
            "Description": "Admin password for Splunk. (8-32 characters, alphanumeric only)",
            "NoEcho": "false",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "32",
            "AllowedPattern": "[a-zA-Z0-9]*",
            "ConstraintDescription": "Must be alphanumeric only.  8-32 characters"
        },
        "KeyName": {
            "Description": "Name of an existing EC2 KeyPair to enable SSH access to the instance",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "Must be the name of an existing EC2 KeyPair."
        },
        "SSHLocation": {
            "Description": " The IP address range that is allowed to SSH to the EC2 instances",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "19",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "Must be a valid IP range in x.x.x.x/x notation.  Use 0.0.0.0/0 for no restrictions."
        },
        "SplunkVPCCIDR": {
            "Description": "The address space that will be assigned to the entire VPC where Splunk will reside. (Recommend at least a /16)",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "19",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        },
        "SplunkSubnetCIDR": {
            "Description": "The address space that will be assigned specifically to the Splunk server subnet. (x.x.x.x/x notation)",
            "Type": "String",
            "MinLength": "9",
            "MaxLength": "19",
            "Default": "10.0.0.0/24",
            "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
            "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
        }
    },
    "Mappings": {
        "AWSAMIRegionMap": {
            "AMI": {
                "SPLUNKENTHVM": "splunk_marketplace_AMI_2017-10-17_01_26_27-7b65de6c-5006-4ca2-bd75-fdba95ae5d9d-ami-026fb978.4"
            },
            "ap-northeast-1": {
                "SPLUNKENTHVM": "ami-6d94360b"
            },
            "ap-northeast-2": {
                "SPLUNKENTHVM": "ami-a2c460cc"
            },
            "ap-south-1": {
                "SPLUNKENTHVM": "ami-4a561b25"
            },
            "ap-southeast-1": {
                "SPLUNKENTHVM": "ami-7f1f5d1c"
            },
            "ap-southeast-2": {
                "SPLUNKENTHVM": "ami-bf7996dd"
            },
            "ca-central-1": {
                "SPLUNKENTHVM": "ami-0165dd65"
            },
            "eu-central-1": {
                "SPLUNKENTHVM": "ami-4a259f25"
            },
            "eu-west-1": {
                "SPLUNKENTHVM": "ami-ad02a5d4"
            },
            "eu-west-2": {
                "SPLUNKENTHVM": "ami-77514d13"
            },
            "sa-east-1": {
                "SPLUNKENTHVM": "ami-1b91e977"
            },
            "us-east-1": {
                "SPLUNKENTHVM": "ami-a0c06cda"
            },
            "us-east-2": {
                "SPLUNKENTHVM": "ami-7f456a1a"
            },
            "us-west-1": {
                "SPLUNKENTHVM": "ami-e6b98586"
            },
            "us-west-2": {
                "SPLUNKENTHVM": "ami-5b6ca523"
            }
        }
    },
    "Resources": {
        "VPC": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "SplunkVPCCIDR"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "SplunkSubnet": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "MapPublicIpOnLaunch": "true",
                "CidrBlock": {
                    "Ref": "SplunkSubnetCIDR"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "InternetGateway": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "AttachGateway": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "InternetGatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "RouteTable": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "Route": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "AttachGateway",
            "Properties": {
                "RouteTableId": {
                    "Ref": "RouteTable"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "InternetGateway"
                }
            }
        },
        "SubnetRouteTableAssociation": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SplunkSubnet"
                },
                "RouteTableId": {
                    "Ref": "RouteTable"
                }
            }
        },
        "SplunkNetworkAcl": {
            "Type": "AWS::EC2::NetworkAcl",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    }
                ]
            }
        },
        "InboundSplunkSearchHeadACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "100",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "8000",
                    "To": "8000"
                }
            }
        },
        "InboundSSHACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "101",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": {
                    "Ref": "SSHLocation"
                },
                "PortRange": {
                    "From": "22",
                    "To": "22"
                }
            }
        },
        "InboundSyslogACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "102",
                "Protocol": "17",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": {
                    "Ref": "SSHLocation"
                },
                "PortRange": {
                    "From": "514",
                    "To": "514"
                }
            }
        },
        "InboundResponsePortsACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "103",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "false",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                }
            }
        },
        "OutBoundHTTPACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "104",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "80",
                    "To": "80"
                }
            }
        },
        "OutBoundHTTPSACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "105",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "443",
                    "To": "443"
                }
            }
        },
        "OutBoundSSHACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "106",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "22",
                    "To": "22"
                }
            }
        },
        "OutBoundResponsePortsACL": {
            "Type": "AWS::EC2::NetworkAclEntry",
            "Properties": {
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                },
                "RuleNumber": "107",
                "Protocol": "6",
                "RuleAction": "allow",
                "Egress": "true",
                "CidrBlock": "0.0.0.0/0",
                "PortRange": {
                    "From": "1024",
                    "To": "65535"
                }
            }
        },
        "SubnetNetworkAclAssociation": {
            "Type": "AWS::EC2::SubnetNetworkAclAssociation",
            "Properties": {
                "SubnetId": {
                    "Ref": "SplunkSubnet"
                },
                "NetworkAclId": {
                    "Ref": "SplunkNetworkAcl"
                }
            }
        },
        "SplunkSecurityGroup": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "VpcId": {
                    "Ref": "VPC"
                },
                "GroupDescription": "Enable SSH, and all Splunk-related ports except web interface",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8000",
                        "ToPort": "8000",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "8089",
                        "ToPort": "8089",
                        "CidrIp": {
                            "Ref": "SplunkVPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9997",
                        "ToPort": "9997",
                        "CidrIp": {
                            "Ref": "SplunkVPCCIDR"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9997",
                        "ToPort": "9997",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "9997",
                        "ToPort": "9997",
                        "CidrIp": {
                            "Ref": "SSHLocation"
                        }
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "514",
                        "ToPort": "514",
                        "CidrIp": {
                            "Ref": "SplunkVPCCIDR"
                        }
                    }
                ]
            }
        },
        "SplunkInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "ImageId": {
                    "Fn::FindInMap": [
                        "AWSAMIRegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "SPLUNKENTHVM"
                    ]
                },
                "SecurityGroupIds": [
                    {
                        "Ref": "SplunkSecurityGroup"
                    }
                ],
                "SubnetId": {
                    "Ref": "SplunkSubnet"
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "KeyName": {
                    "Ref": "KeyName"
                },
                "Tags": [
                    {
                        "Key": "Application",
                        "Value": {
                            "Ref": "AWS::StackId"
                        }
                    },
                    {
                        "Key": "role",
                        "Value": "splunk"
                    },
                    {
                        "Key": "Name",
                        "Value": "splunk"
                    }
                ],
                "BlockDeviceMappings": [
                    {
                        "DeviceName": "/dev/xvda",
                        "Ebs": {
                            "VolumeSize": "50"
                        }
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -v\n",
                                "cd /home/ubuntu/\n",
                                "wget https://s3.amazonaws.com/gigamonartifacts/wireshark_splunk/scripts/splunk.sh\n",
                                "chmod 777 /home/ubuntu/splunk.sh\n",
                                "bash splunk.sh"
                            ]
                        ]
                    }
                }
            }
        },
        "SplunkIP": {
            "Type": "AWS::EC2::EIP",
            "DependsOn": "AttachGateway",
            "Properties": {
                "Domain": "vpc",
                "InstanceId": {
                    "Ref": "SplunkInstance"
                }
            }
        }
    },
    "Outputs": {
        "SplunkURL": {
            "Description": "Splunk web interface URL",
            "Value": {
                "Fn::Join": [
                    ":",
                    [
                        {
                            "Ref": "SplunkIP"
                        },
                        "8000"
                    ]
                ]
            }
        },
        "Credentials": {
            "Description": "Admin credentials for Splunk search head URL",
            "Value": {
                "Fn::Join": [
                    ":",
                    [
                        "admin",
                        {
                            "Ref": "SplunkAdminPassword"
                        }
                    ]
                ]
            }
        }
    }
}