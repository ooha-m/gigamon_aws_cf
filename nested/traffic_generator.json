{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "Create an EC2 instance for Traffic Generator",
    "Parameters": {
        "KeyPair": {
            "Description": "Name of an existing EC2 Key Pair to enable SSH access to the GvTapAgnt instances",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "ConstraintDescription": "must be the name of an existing EC2 KeyPair."
        },
        "InstanceType": {
            "Description": "GvTapAgnt EC2 instance type",
            "Type": "String"
        },
        "VPC": {
            "Description": "VPC to launch virtual server in",
            "Type": "AWS::EC2::VPC::Id"
        },
        "GvTapPrivateIp": {
            "Description": "GvTapAgent PrivateIp",
            "Type": "String"
        },
        "Subnet1": {
            "Description": "subnet to launch virtual server in",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "Subnet2": {
            "Description": "subnet to launch virtual server in",
            "Type": "AWS::EC2::Subnet::Id"
        },
        "AvailabilityZone": {
            "Description": "Availability Zone Name",
            "Type": "String"
        },
        "GigaVUEPublicDnsName": {
            "Description": "GigaVUE-FM Instance Public IP",
            "Type": "String"
        },
        "GigaVUEInstanceId": {
            "Description": "GigaVUE-FM Instance ID",
            "Type": "String"
        },
        "GigaVUESGId": {
            "Description": "GigaVUE-FM SG ID",
            "Type": "String"
        },
        "GvTapControllersAMIId": {
            "Description": "GvTapControllers AMI ID",
            "Type": "String"
        },
        "VseriesControllersAMIId": {
            "Description": "VseriesControllers AMI ID",
            "Type": "String"
        },
        "VseriesNodesAMIId": {
            "Description": "VseriesNodes AMI ID",
            "Type": "String"
        },
        "WiresharkPrivateIp": {
            "Description": "Wireshark PrivateIp",
            "Type": "String"
        }
    },
    "Mappings": {
        "RegionMap": {
            "us-east-1": {
                "ImageID": "ami-43a15f3e"
            },
            "us-west-1": {
                "ImageID": "ami-925144f2"
            },
            "us-east-2": {
                "ImageID": "ami-916f59f4"
            },
            "us-west-2": {
                "ImageID": "ami-4e79ed36"
            },
            "sa-east-1": {
                "ImageID": "ami-423d772e"
            },
            "eu-central-1": {
                "ImageID": "ami-7c412f13"
            },
            "ca-central-1": {
                "ImageID": "ami-ae55d2ca"
            },
            "eu-west-1": {
                "ImageID": "ami-f90a4880"
            },
            "eu-west-2": {
                "ImageID": "ami-f4f21593"
            },
            "eu-west-3": {
                "ImageID": "ami-0e55e373"
            },
            "ap-southeast-1": {
                "ImageID": "ami-52d4802e"
            },
            "ap-southeast-2": {
                "ImageID": "ami-d38a4ab1"
            },
            "ap-northeast-1": {
                "ImageID": "ami-0d74386b"
            },
            "ap-northeast-2": {
                "ImageID": "ami-a414b9ca"
            },
            "ap-south-1": {
                "ImageID": "ami-0189d76e"
            }
        }
    },
    "Resources": {
        "TFSG": {
            "Type": "AWS::EC2::SecurityGroup",
            "Properties": {
                "GroupDescription": "SG for TF EC2 Instance",
                "SecurityGroupIngress": [
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "22",
                        "ToPort": "22",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "443",
                        "ToPort": "443",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "80",
                        "ToPort": "80",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "tcp",
                        "FromPort": "3000",
                        "ToPort": "3000",
                        "CidrIp": "0.0.0.0/0"
                    },
                    {
                        "IpProtocol": "udp",
                        "FromPort": "4789",
                        "ToPort": "4789",
                        "CidrIp": "0.0.0.0/0"
                    }
                ],
                "VpcId": {
                    "Ref": "VPC"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "TF_SG"
                    }
                ]
            }
        },
        "TFInstance": {
            "Type": "AWS::EC2::Instance",
            "Properties": {
                "KeyName": {
                    "Ref": "KeyPair"
                },
                "ImageId": {
                    "Fn::FindInMap": [
                        "RegionMap",
                        {
                            "Ref": "AWS::Region"
                        },
                        "ImageID"
                    ]
                },
                "InstanceType": {
                    "Ref": "InstanceType"
                },
                "NetworkInterfaces": [
                    {
                        "AssociatePublicIpAddress": "True",
                        "DeleteOnTermination": "True",
                        "SubnetId": {
                            "Ref": "Subnet1"
                        },
                        "DeviceIndex": "0",
                        "GroupSet": [
                            {
                                "Ref": "TFSG"
                            }
                        ]
                    }
                ],
                "UserData": {
                    "Fn::Base64": {
                        "Fn::Join": [
                            "",
                            [
                                "#!/bin/bash -ex\n",
                                "agent1_ip=",
                                {
                                    "Ref": "GvTapPrivateIp"
                                },
                                "\n",
                                "FM_ID=",
                                {
                                    "Ref": "GigaVUEInstanceId"
                                },
                                "\n",
                                "VPC_ID=",
                                {
                                    "Ref": "VPC"
                                },
                                "\n",
                                "KEY_PAIR=",
                                {
                                    "Ref": "KeyPair"
                                },
                                "\n",
                                "MGMT_SUBNET=",
                                {
                                    "Ref": "Subnet1"
                                },
                                "\n",
                                "MIRROR_SUBNET=",
                                {
                                    "Ref": "Subnet2"
                                },
                                "\n",
                                "GIGAMON_SG_ID=",
                                {
                                    "Ref": "GigaVUESGId"
                                },
                                "\n",
                                "REGION=",
                                {
                                    "Ref": "AWS::Region"
                                },
                                "\n",
                                "AZZONE=",
                                {
                                    "Ref": "AvailabilityZone"
                                },
                                "\n",
                                "FM_DNS=",
                                {
                                    "Ref": "GigaVUEPublicDnsName"
                                },
                                "\n",
                                "GVTAP_AMIID=",
                                {
                                    "Ref": "GvTapControllersAMIId"
                                },
                                "\n",
                                "VSCONTLR_AMIID=",
                                {
                                    "Ref": "VseriesControllersAMIId"
                                },
                                "\n",
                                "VSNODE_AMIID=",
                                {
                                    "Ref": "VseriesNodesAMIId"
                                },
                                "\n",
                                "WIRESHARK_IP=",
                                {
                                    "Ref": "WiresharkPrivateIp"
                                },
                                "\n",
                                "cd /home/ubuntu/\n",
                                "wget https://s3.amazonaws.com/gigamonartifacts/wireshark_splunk/scripts/cron_job.sh\n",
                                "chmod 777 /home/ubuntu/cron_job.sh\n",
                                "sh cron_job.sh $agent1_ip $FM_ID $VPC_ID $KEY_PAIR $MGMT_SUBNET $MIRROR_SUBNET $GIGAMON_SG_ID $REGION $AZZONE $FM_DNS $GVTAP_AMIID $VSCONTLR_AMIID $VSNODE_AMIID $WIRESHARK_IP"
                            ]
                        ]
                    }
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": "Traffic_Generator"
                    }
                ]
            }
        }
    }
}